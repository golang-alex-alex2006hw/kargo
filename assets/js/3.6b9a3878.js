(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{156:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started","aria-hidden":"true"}},[e._v("#")]),e._v(" Getting started")]),a("div",{staticClass:"warning custom-block"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),a("p",[e._v("Even if "),a("strong",[e._v("kargo")]),e._v(" let you configure and manage all the services using a single YAML file, we assume you are enough familiar with the underlying technologies to be able to customize their configurations in order to address your needs.")])]),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites","aria-hidden":"true"}},[e._v("#")]),e._v(" Prerequisites")]),a("p",[e._v("Installing "),a("strong",[e._v("kargo")]),e._v(" is quite easy. However, you need to have a version of Docker Engine and Docker Compose installed supporting version 3 of compose file.")]),a("p",[e._v("If you already have these, congratulations ! If not, please follow the installation instructions:")]),a("ol",[a("li",[e._v("Docker Engine: https://docs.docker.com/engine/installation/")]),a("li",[e._v("Docker Compose: https://docs.docker.com/compose/install/.")])]),a("h2",{attrs:{id:"install-kargo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-kargo","aria-hidden":"true"}},[e._v("#")]),e._v(" Install kargo")]),a("ol",[a("li",[e._v("Clone the "),a("strong",[e._v("kargo")]),e._v(" repository in the directory of your choice")])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git clone https://github.com/kalisio/kargo.git\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("Create a network with the name of your choice, here: "),a("strong",[e._v("kargo")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("docker network create kargo\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[e._v("Make a copy of our "),a("code",[e._v(".env.sample")]),e._v(" and rename it to "),a("code",[e._v(".env")])])]),a("li",[a("p",[e._v("Update the file with your preferences:")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#\n# KARGO\n#\n# This is the .env file to set up your kargo environment\n\n# The path to your datasets\nDATA_PATH=/mnt/data\n\n# Postgis configuration\nPOSTGRES_USER=postgres\nPOSTGRES_PASSWORD=postgres\nPGDATA=/mnt/data/postgis\n\n# Docker network to be used\nNETWORK=kargo\n\n# Virtual hosts \n# Uncomment and update the lines below if you use an nginx-proxy based solution in front of kargo\n#GEOSERVER_VHOST=geoserver.your-domain.com\n#MAPPROXY_VHOST=mapproxy.your-domain.com\n#TILESERVERGL_VHOST=tileservergl.your-domain.com\n")])])]),a("h2",{attrs:{id:"deploy-kargo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-kargo","aria-hidden":"true"}},[e._v("#")]),e._v(" Deploy kargo")]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$./deploy-kargo.sh\n")])])]),a("h2",{attrs:{id:"stop-kargo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop-kargo","aria-hidden":"true"}},[e._v("#")]),e._v(" Stop kargo")]),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("$./remove-kargo.sh\n")])])]),a("h2",{attrs:{id:"swarm-mode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#swarm-mode","aria-hidden":"true"}},[e._v("#")]),e._v(" Swarm mode")])])}],!1,null,null,null);t.default=r.exports}}]);